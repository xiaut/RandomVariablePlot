package webapp

import org.openmole.plotlyjs.Plotly
import org.openmole.plotlyjs.PlotlyImplicits._
import org.openmole.plotlyjs._
import org.openmole.plotlyjs.all._
import org.scalajs.dom.document
import scalatags.JsDom.all.div

import scala.scalajs.js
import scala.scalajs.js.JSConverters.JSRichIterableOnce

object WebApp {

  def main(args: Array[String]): Unit = {
    println("Hello world!")

    val seq = Seq(
      1.5099989898129365,
      1.4948643772917216,
      1.5039023337449648,
      1.5091321607660066,
      1.5136242312895072,
      1.5077765246773485,
      1.5016777606489202,
      1.5029485297691203,
      1.5145007418963674,
      1.504173459449943,
      1.5082828860028912,
      1.514936176301143,
      1.5103461722124747,
      1.504605834195633,
      1.5072118723508021,
      1.5084962542687979,
      1.5100801721016934,
      1.5075935240276641,
      1.5173193576013284,
      1.5143473609619202,
      1.5152637585123712,
      1.5105993321598281,
      1.4962433848687018,
      1.5065336928007245,
      1.5007336909746243,
      1.4996931044578055,
      1.5015110653914616,
      1.5103510715953656,
      1.5096750171249882,
      1.5043178739764211,
      1.508973760938095,
      1.5059376683047268,
      1.5039880234629188,
      1.5054555570169645,
      1.5024481096592373,
      1.5027369004539846,
      1.5092012313201846,
      1.5147884035596335,
      1.5101178020457982,
      1.5009871725763317,
      1.5120554765213805,
      1.505992260189792,
      1.5055099851586446,
      1.5175993542242356,
      1.4943660674377321,
      1.5101373407200152,
      1.5095094960775421,
      1.5135764692976013,
      1.4978977561554736,
      1.5125119055305398,
      1.5149324132988797,
      1.5112117778528609,
      1.513736466008368,
      1.491418423150182,
      1.510205248975295,
      1.5097871227067594,
      1.5062481380554107,
      1.5097116235259076,
      1.5100985150007287,
      1.4866094915644184,
      1.5084477507285048,
      1.5019635918137177,
      1.503549406918401,
      1.506757591700354,
      1.510159116047599,
      1.5057231446128074,
      1.520526591064195,
      1.5236067812537768,
      1.515261899654797,
      1.5148998510508194,
      1.5144370387831672,
      1.5073470469821624,
      1.5087945379515133,
      1.5043020259404365,
      1.5020920464975331,
      1.517890144335008,
      1.512606588375337,
      1.5134622281869474,
      1.514513329505844,
      1.5095705780986488,
      1.5077815403604522,
      1.5074358318242502,
      1.5087949494491173,
      1.507460140276428,
      1.5156631657035942,
      1.5170283851698874,
      1.5107254761640259,
      1.5143115825062528,
      1.5102142989678733,
      1.510651383523073,
      1.5059489247116988,
      1.5135276507841529,
      1.5171803316732724,
      1.5142417663772387,
      1.5145637934901552,
      1.502176833146983,
      1.5016018512359774,
      1.505906525009926,
      1.504489542385563,
      1.5070982194366362,
      1.5129758021770545,
      1.506158087087838,
      1.516042421984327,
      1.5001181035602578,
      1.5088946144529922,
      1.5185945701332109,
      1.5032423152618584,
      1.514413533341703,
      1.5084358962314117,
      1.5038006296630906,
      1.5071165098023636,
      1.5186097165793029,
      1.515306581318626,
      1.5019293844687087,
      1.5163577199932576,
      1.5064010058524333,
      1.5099047727485395,
      1.5053133232363196,
      1.506629229430566,
      1.5178666530871667,
      1.5004771789158475,
      1.5066622671744072,
      1.5102890366024588,
      1.5146782792372293,
      1.5105257839140616,
      1.5161245544569892,
      1.511746909289803,
      1.4968582411993356,
      1.515753722191011,
      1.510674254548797,
      1.5136215454477426,
      1.504657505821772,
      1.5024303298912038,
      1.50582703861554,
      1.5096907016308276,
      1.4959001089790411,
      1.5010723949290323,
      1.4933203279957687,
      1.5094732362174879,
      1.500051453597383,
      1.5117699446525368,
      1.5046071666881318,
      1.51598412358717,
      1.509480468876497,
      1.5074929329527549,
      1.5074533020413257,
      1.510864320991611,
      1.5102341499226792,
      1.5097093705452038,
      1.5049623130910093,
      1.50402102911746,
      1.500586740857963,
      1.5106591350282788,
      1.4997954949173353,
      1.508159710023507,
      1.5171461064385532,
      1.5068655517944598,
      1.498389727125102,
      1.511136252407797
    )

    val plotDiv = div.render

    val layout = Layout
      .title("Random variable")
      .showlegend(true)

    val data = box
      .y(seq.toJSArray)
      .name("Values")

    val config = Config.displayModeBar(false)

    Plotly.newPlot(plotDiv, js.Array(data), layout, config)

    document.body.appendChild(plotDiv)

    val sortedSeq = seq.sorted
    val halfLength = sortedSeq.length/2
    val median = if(sortedSeq.length % 2 == 0) {
      (sortedSeq(halfLength - 1) + sortedSeq(halfLength))/2
    } else {
      sortedSeq(halfLength)
    }
    appendParagraph(s"Median : $median")

    val mean = seq.sum/seq.length
    val standardDeviation = math.sqrt(seq.map(x => math.pow(x - mean, 2)).sum/seq.length)
    appendParagraph(s"Standard deviation : $standardDeviation")
  }

  def appendParagraph(text: String): Unit = {
    var paragraphDiv = document.createElement("p")
    paragraphDiv.textContent = text
    document.body.appendChild(paragraphDiv)
  }

}
